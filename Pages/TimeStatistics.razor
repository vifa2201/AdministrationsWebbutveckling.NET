@using System.Globalization
@using System.Net.Http
@using System.Text.Json
@using System.Text
@using System.Net.Http.Json
@using System.Net.Http.Headers;
@using Microsoft.AspNetCore.Authorization
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@attribute [Authorize]

<h2>Antal lediga tider</h2>

@if (availableTimes != null && availableTimes.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Datum</th>
                <th>Antal lediga tider</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in availableTimes)
            {
                <tr>
                    <td>@item.Date.ToShortDateString()</td>
                    <td>@item.Count</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Inga lediga tider tillgängliga.</p>
    <a href="/time" class="btn btn-standard">Lägg till nya tider</a>
}
@code {
    private List<AvailableTimesPerDate> availableTimes;

    protected override async Task OnInitializedAsync()
    {
        //hämtar lediga tider
        await LoadAvailableTimes();
    }

    private async Task LoadAvailableTimes()
    {
        try
        {
            // Hämta alla tider från API
            var allTimes = await Http.GetFromJsonAsync<Times[]>("http://localhost:5004/api/Time");

            // Gruppera tider efter datum och räkna antalet lediga tider för varje datum
            availableTimes = allTimes.Where(t => t.Available && t.Date >= DateTime.Today)
                                      .GroupBy(t => t.Date)
                                      .Select(g => new AvailableTimesPerDate { Date = g.Key, Count = g.Count() })
                                      .ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error loading available times: " + ex.Message);
        }
    }

    //klasser
    public class AvailableTimesPerDate
    {
        public DateTime Date { get; set; }
        public int Count { get; set; }
    }

      public class Times
    {
        public int Id { get; set; }
        
        public TimeOnly Time { get; set; }
        public bool Available { get; set; }
          
        public DateTime Date { get; set; }
    }
}